package com.ja.webproject.sitterboard_process.controller;

import java.util.ArrayList;
import java.util.HashMap;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;

import com.ja.webproject.member.service.MemberServiceImpl;
import com.ja.webproject.sitterboard_process.service.SitterBoard_ProcessServiceImpl;
import com.ja.webproject.vo.HE_FinddogBoardVo;
import com.ja.webproject.vo.HE_MemberVo;
import com.ja.webproject.vo.HE_SitterBoardVo;
import com.ja.webproject.vo.HE_SitterBoard_ProcessVo;

@Controller
@RequestMapping("/sitterboard_process/*")
public class SitterBoard_ProcessController {
	
	@Autowired
	private SitterBoard_ProcessServiceImpl sitterBoard_ProcessService;
	
	@Autowired
	private MemberServiceImpl memberService;
	
	
	@RequestMapping("HE_SitterBoard_ProcessList.do")
	public String sitterBoard_ProcessList() {
		
		return "sitterboard_process/HE_SitterBoard_ProcessList";
	}
	
	@RequestMapping("sitterRequestComplete.do")
	public String sitterRequestComplete() {
		
		return "sitterboard_process/sitterRequestComplete";
	}
	
	@RequestMapping("sitterRequestFail.do")
	public String sitterRequestFail() {
		
		return "sitterboard_process/sitterRequestFail";
	}
	
	//==========================================================================================시터보드게시판의 신청글 클릭시================================================================
	@RequestMapping("sitterRequest.do")
	public String sitterRequest(String sitterboard_no, String finddogboard_no, String message) {//HE_SitterBoard_ProcessVo vo
		
		//System.out.println("request_0"+":"+sitterboard_no+":"+finddogboard_no+":"+message);
		
		int sitterboardNo = Integer.parseInt(sitterboard_no);
		int finddogboardNo = Integer.parseInt(finddogboard_no);
		
		HE_SitterBoard_ProcessVo vo = new HE_SitterBoard_ProcessVo();
		vo.setSitterboard_no(sitterboardNo);
		vo.setFinddogboard_no(finddogboardNo);
		vo.setMessage(message);
		
		int result = sitterBoard_ProcessService.checkSitterRequest(vo);
		
		if(result == 0) {
			
			try{
				
				sitterBoard_ProcessService.sitterRequest(vo);
				System.out.println("request_1");
				
				return "redirect:../sitterboard_process/sitterRequestComplete.do";
			}
			catch (Exception e) {
				
				//System.out.println(e.getMessage());
				
				return "redirect:../sitterboard_process/sitterRequestFail.do";
			}
			
		}else {
			return "redirect:../sitterboard_process/sitterRequestFail.do";
		}
		
		
	}

	//========================================================================마이페이지에서 시터게시판 볼때(신청)================================================================
	
	@RequestMapping("sitterRequestListPage.do")
	public String sitterRequestListPage(HttpSession session, Model model){
		
		HE_MemberVo memberVo = (HE_MemberVo) session.getAttribute("sessionUser");
		int member_no = memberVo.getMember_no();
		
		//====================================================
		//=============메인페이지 로딩 시, 내가 쓴 finddogBoard 글 중에 status='ING'인 글만 가져오기(전체 영역에서 쓰려고)
		
		ArrayList<HE_FinddogBoardVo> myFinddogBoardList  = memberService.getMyAuthority(member_no);
		
		//session.setAttribute("finddogBoardList", finddogBoardList);
		
		
		
		//ArrayList<HE_FinddogBoardVo> finddogList = (ArrayList<HE_FinddogBoardVo>) session.getAttribute("finddogBoardList");
		
		System.out.println("find....:" + myFinddogBoardList);
		
		ArrayList<HashMap<HE_FinddogBoardVo,ArrayList<HE_SitterBoard_ProcessVo>>> sitterRequestList = sitterBoard_ProcessService.sitterRequestListPage(myFinddogBoardList);
		
		System.out.println("sitter:" + sitterRequestList);
		
		model.addAttribute("sitterRequestList", sitterRequestList);
		
		return "sitterboard_process/sitterRequestListPage";
		
	}
	
	//=====================신청 취소 
	@RequestMapping("cancelSitterRequest.do")
	public String cancelSitterRequest(String sitterboard_process_no) {
		
		//System.out.println("cancle:"+sitterboard_process_no);
		
		int no = Integer.parseInt(sitterboard_process_no);
		sitterBoard_ProcessService.cancelSitterRequest(no);
	
		
		return "redirect:../sitterboard_process/sitterRequestListPage.do";
	}
	
	
	
	
	//========================================================================마이페이지에서 시터게시판 볼때(수락)================================================================
	@RequestMapping("sitterAcceptListPage.do")
	public String sitterAcceptListPage(HttpSession session, Model model){
		
		HE_MemberVo vo = (HE_MemberVo) session.getAttribute("sessionUser");
		
	
		
		ArrayList<HashMap<HE_SitterBoardVo, ArrayList<HE_SitterBoard_ProcessVo>>> sitterAcceptList = sitterBoard_ProcessService.sitterAcceptListPage(vo);
		
		model.addAttribute("sitterAcceptList", sitterAcceptList);
		
		System.out.println(sitterAcceptList.size());
		
		return "sitterboard_process/sitterAcceptListPage";
		
	}
	
	//========================================================================수락버튼 클릭 시, status 변경 ========================================================================

	@RequestMapping("sittetAccept.do")
	public String sittetAccept(HE_SitterBoard_ProcessVo sitterVo, HttpSession session) {
		
		HE_MemberVo memberVo = (HE_MemberVo)session.getAttribute("sessionUser");
		int member_no = memberVo.getMember_no();
		
		System.out.println("acceptQuery:"+member_no);
		
		//=======================1. sitterboard에 글 올린 시터인 사람이 여러 사람으로부터 신청받은 경우, 해당 수락한 글 제외하고 거절상태로 변경
		sitterBoard_ProcessService.change_StatusNo_AcceptAll(memberVo, sitterVo);
		//=======================2. finddogBoard에 글 올린 사람이 여러 시터에게 신청한 경우, 해당 수락한 시터 제외하고 거절상태로 변경
		sitterBoard_ProcessService.change_Status(sitterVo);
		
		
		return "redirect:../sitterboard_process/sitterAcceptListPage.do";
	}
	

	//=====================수락 거절  
	@RequestMapping("cancelSitterAccept.do")
	public String cancelSitterAccept(String sitterboard_process_no) {
		
		//System.out.println("cancle:"+sitterboard_process_no);
		
		int no = Integer.parseInt(sitterboard_process_no);
		sitterBoard_ProcessService.cancelSitterAccept(no);
	
		
		return "redirect:../sitterboard_process/sitterAcceptListPage.do";
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
}
